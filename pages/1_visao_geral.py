import streamlit as st
import plotly.express as px
from filtro import load_and_filter_data

st.set_page_config(
    page_title="1. Vis√£o Geral do Tempo de Espera para FAV",
    page_icon="ü©∫",
    layout="wide"
)

st.sidebar.header("Filtros")

# Carregar dados e op√ß√µes iniciais
df, opcoes_acesso, anos_disponiveis, meses_disponiveis = load_and_filter_data()

# Filtros na sidebar
filtro_acesso = st.sidebar.multiselect(
    "Tipo de Acesso Vascular",
    options=opcoes_acesso,
    default=[ac for ac in opcoes_acesso if "F√≠stula" in ac]
)

filtro_cronico = st.sidebar.checkbox(
    "Mostrar somente pacientes cr√¥nicos (‚â• 3 meses de tratamento)",
    value=True
)

anos_selecionados = st.sidebar.multiselect(
    "Ano da cria√ß√£o da FAV",
    options=anos_disponiveis,
    default=anos_disponiveis
)

meses_selecionados = st.sidebar.multiselect(
    "M√™s da cria√ß√£o da FAV",
    options=meses_disponiveis,
    format_func=lambda x: f"{x:02d}",
    default=meses_disponiveis
)

# Aplicar filtro nos dados, agora passando filtro_cronico corretamente
df_filtrado, _, _, _ = load_and_filter_data(
    filtro_acesso_default=False,
    filtro_cronico_default=filtro_cronico,
    filtros_acesso=filtro_acesso,
    anos_selecionados=anos_selecionados,
    meses_selecionados=meses_selecionados
)

# Verificar se df_filtrado √© vazio ou falta colunas esperadas para evitar erros
if df_filtrado.empty or 'TEMPO_ESPERA_DIAS' not in df_filtrado.columns:
    st.warning("Nenhum dado dispon√≠vel para os filtros selecionados.")
    st.stop()

# Estat√≠sticas principais
n_pacientes = len(df_filtrado)
tempo_medio = df_filtrado['TEMPO_ESPERA_DIAS'].mean()
tempo_median = df_filtrado['TEMPO_ESPERA_DIAS'].median()
std_desvio = df_filtrado['TEMPO_ESPERA_DIAS'].std()
percentil_25 = df_filtrado['TEMPO_ESPERA_DIAS'].quantile(0.25)
percentil_75 = df_filtrado['TEMPO_ESPERA_DIAS'].quantile(0.75)
prop_acima_180 = (df_filtrado['TEMPO_ESPERA_DIAS'] > 180).mean() * 100

# T√≠tulo e descri√ß√£o
st.title("1. Vis√£o Geral do Tempo de Espera para FAV")
st.markdown("An√°lise do tempo entre o in√≠cio da di√°lise e confec√ß√£o da f√≠stula arteriovenosa em Porto Alegre (2015-2024).")

# M√©tricas principais
col1, col2, col3 = st.columns(3)
col1.metric("Tempo M√©dio de Espera", f"{tempo_medio:.0f} dias")
col2.metric("N√∫mero de Pacientes", f"{n_pacientes}")
col3.metric("Unidades Hospitalares", f"{df_filtrado['COD_UNIDADE_HOSPITALAR'].nunique()}")

st.markdown("---")

# Estat√≠sticas adicionais
st.markdown(f"""
**Desvio padr√£o:** {std_desvio:.1f} dias  
**Mediana:** {tempo_median:.0f} dias  
**Percentil 25:** {percentil_25:.0f} dias | **Percentil 75:** {percentil_75:.0f} dias  

**Propor√ß√£o com espera > 6 meses:** {prop_acima_180:.1f}%  

---
*Nota: o histograma abaixo considera tempos entre 0 e 730 dias para melhor visualiza√ß√£o.*
""")

# Histograma do tempo de espera
fig = px.histogram(
    df_filtrado,
    x='TEMPO_ESPERA_DIAS',
    nbins=50,
    marginal="box",
    title="Distribui√ß√£o do Tempo de Espera para Confec√ß√£o da FAV (dias)",
    labels={'TEMPO_ESPERA_DIAS': 'Tempo de Espera (dias)'}
)
fig.update_layout(
    xaxis_title="Tempo de Espera (dias)",
    yaxis_title="N√∫mero de Pacientes",
    bargap=0.1
)
st.plotly_chart(fig, use_container_width=True)

# Boxplot comparativo por sexo
with st.expander("‚è≥ Compara√ß√£o do Tempo de Espera por Sexo"):
    fig_sexo = px.box(
        df_filtrado,
        x='SEXO',
        y='TEMPO_ESPERA_DIAS',
        points="all",
        labels={'TEMPO_ESPERA_DIAS': 'Tempo de Espera (dias)', 'SEXO': 'Sexo'},
        title="Tempo de Espera para Confec√ß√£o da FAV por Sexo"
    )
    st.plotly_chart(fig_sexo, use_container_width=True)

# Boxplot comparativo por ra√ßa/cor
with st.expander("‚è≥ Compara√ß√£o do Tempo de Espera por Ra√ßa/Cor"):
    fig_raca = px.box(
        df_filtrado,
        x='RACA_COR',
        y='TEMPO_ESPERA_DIAS',
        points="all",
        labels={'TEMPO_ESPERA_DIAS': 'Tempo de Espera (dias)', 'RACA_COR': 'Ra√ßa/Cor'},
        title="Tempo de Espera para Confec√ß√£o da FAV por Ra√ßa/Cor"
    )
    st.plotly_chart(fig_raca, use_container_width=True)

# Insights autom√°ticos
st.markdown("---")
st.subheader("üí° Insights autom√°ticos")

if tempo_medio > 300:
    st.warning("‚ö†Ô∏è O tempo m√©dio de espera est√° acima de 300 dias, indicando poss√≠vel atraso no acesso vascular.")
else:
    st.success("‚úÖ O tempo m√©dio de espera est√° dentro do esperado para este per√≠odo.")

if prop_acima_180 > 30:
    st.warning(f"‚ö†Ô∏è Alta propor√ß√£o ({prop_acima_180:.1f}%) de pacientes com espera superior a 6 meses.")
else:
    st.info(f"‚ÑπÔ∏è Propor√ß√£o de pacientes com espera superior a 6 meses est√° em {prop_acima_180:.1f}%.")

if tempo_median > 300:
    st.info("‚ÑπÔ∏è A mediana do tempo de espera sugere que metade dos pacientes esperam mais de 300 dias.")

# Exporta√ß√£o de dados filtrados
st.markdown("---")
with st.expander("üì• Exportar dados filtrados"):
    csv = df_filtrado.to_csv(index=False).encode('utf-8')
    st.download_button(
        label="üìÑ Baixar CSV",
        data=csv,
        file_name='dados_filtrados_fav.csv',
        mime='text/csv'
    )

# Explica√ß√£o final
st.markdown("---")
st.markdown("""
**Sobre esta an√°lise:**  
Este dashboard apresenta uma an√°lise temporal e demogr√°fica do tempo de espera para a confec√ß√£o da F√≠stula Arteriovenosa (FAV) em pacientes em di√°lise cr√¥nica em Porto Alegre entre 2015 e 2024.  
A f√≠stula arteriovenosa √© o acesso vascular recomendado para di√°lise, pois apresenta menor risco de infec√ß√µes e complica√ß√µes. O tempo de espera adequado para sua confec√ß√£o impacta diretamente na qualidade do tratamento e nos resultados cl√≠nicos.  
Os filtros permitem segmentar a an√°lise por tipo de acesso vascular, per√≠odo, sexo, ra√ßa/cor e condi√ß√£o cr√¥nica.  
Use os gr√°ficos para visualizar a distribui√ß√£o e diferen√ßas populacionais no tempo de espera.
""")
