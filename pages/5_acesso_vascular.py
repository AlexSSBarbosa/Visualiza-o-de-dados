import streamlit as st
import pandas as pd
import plotly.express as px
from filtro import load_and_filter_data

st.set_page_config(page_title="Influ√™ncia do Acesso Vascular Inicial", layout="wide")

st.markdown("# 5. O Acesso Vascular Inicial Influencia no Tempo de Espera para FAV?")
st.markdown("### Pacientes em Di√°lise Cr√¥nica - Porto Alegre (2015‚Äì2024)")

# --- Filtros globais na sidebar ---
st.sidebar.header("Filtros Globais")

df_raw, opcoes_acesso, anos_disponiveis, meses_disponiveis = load_and_filter_data()

# Filtro: Tipo de Acesso Vascular Inicial
filtros_acesso = st.sidebar.multiselect(
    "Tipo de Acesso Vascular Inicial",
    options=opcoes_acesso,
    default=opcoes_acesso
)

# Filtro: Cr√¥nico
filtro_cronico = st.sidebar.checkbox(
    "Apenas pacientes cr√¥nicos (‚â• 3 meses)",
    value=True
)

# Filtro: Anos
ano_min, ano_max = min(anos_disponiveis), max(anos_disponiveis)
ano_inicial, ano_final = st.sidebar.slider(
    "Intervalo de Anos da Cria√ß√£o da FAV",
    min_value=ano_min,
    max_value=ano_max,
    value=(ano_min, ano_max)
)

# Filtro: Meses
meses_selecionados = st.sidebar.multiselect(
    "Meses da Cria√ß√£o da FAV",
    options=meses_disponiveis,
    format_func=lambda x: f"{x:02d}",
    default=meses_disponiveis
)

# --- Aplicar filtros ---
df, _, _, _ = load_and_filter_data(
    filtros_acesso=filtros_acesso,
    filtro_cronico_default=filtro_cronico,
    anos_selecionados=list(range(ano_inicial, ano_final + 1)),
    meses_selecionados=meses_selecionados
)

if df.empty:
    st.warning("‚ö†Ô∏è Nenhum dado encontrado com os filtros aplicados.")
    st.stop()

# --- Texto introdut√≥rio ---
st.write("""
Pacientes que iniciam a di√°lise com **cateteres tempor√°rios** geralmente o fazem de forma **urgente ou n√£o planejada**, 
enquanto aqueles que j√° possuem uma **F√≠stula Arteriovenosa (FAV)** tendem a ter um preparo pr√©vio.  
Esta an√°lise avalia se o **tipo de acesso vascular inicial** est√° associado a **diferen√ßas no tempo de espera** para confec√ß√£o definitiva da FAV.
""")

# --- Distribui√ß√£o por tipo de acesso inicial ---
contagem_acesso = df['ACESSO_VASCULAR_INICIAL'].value_counts().reset_index()
contagem_acesso.columns = ['Acesso Inicial', 'N√∫mero de Pacientes']

col1, col2 = st.columns(2)

with col1:
    st.markdown("#### üìä Propor√ß√£o de Pacientes por Tipo de Acesso Inicial")
    st.write("""
    Este gr√°fico de pizza mostra **quantos pacientes iniciaram com cada tipo de acesso vascular**.
    A distribui√ß√£o ajuda a entender **quais estrat√©gias s√£o mais utilizadas na pr√°tica cl√≠nica**:  
    se mais pacientes iniciam com **cateteres tempor√°rios (urg√™ncia)** ou com **FAV (planejado)**.
    """)

    fig_pie = px.pie(
        contagem_acesso,
        names='Acesso Inicial',
        values='N√∫mero de Pacientes',
        hole=0.3,
        title="Distribui√ß√£o por Tipo de Acesso Inicial",
        color_discrete_sequence=px.colors.qualitative.Set3  # cores distintas e profissionais
    )
    fig_pie.update_traces(textposition='inside', textinfo='percent+label')
    st.plotly_chart(fig_pie, use_container_width=True)

with col2:
    st.markdown("#### ‚è±Ô∏è Tempo de Espera por Tipo de Acesso Vascular Inicial")
    st.write("""
    Este gr√°fico compara a **distribui√ß√£o do tempo de espera** at√© a confec√ß√£o da FAV, agrupado por tipo de acesso inicial.

    A **linha dentro da caixa** representa a **mediana**.  
    Os **pontos** s√£o pacientes individuais (outliers), e o formato da caixa mostra a **varia√ß√£o dos tempos**.

    √â √∫til para identificar se pacientes com **cateteres** esperam mais que os com **FAV desde o in√≠cio**.
    """)

    ordem_acessos = (
        df.groupby('ACESSO_VASCULAR_INICIAL')['TEMPO_ESPERA_DIAS']
        .median()
        .sort_values(ascending=False)
        .index.tolist()
    )

    fig_box = px.box(
        df,
        x='ACESSO_VASCULAR_INICIAL',
        y='TEMPO_ESPERA_DIAS',
        points='outliers',
        color='ACESSO_VASCULAR_INICIAL',
        title="Tempo de Espera por Tipo de Acesso",
        labels={
            'TEMPO_ESPERA_DIAS': 'Tempo de Espera (dias)',
            'ACESSO_VASCULAR_INICIAL': 'Tipo de Acesso'
        },
        color_discrete_sequence=px.colors.qualitative.Dark24,
        category_orders={'ACESSO_VASCULAR_INICIAL': ordem_acessos}
    )
    fig_box.update_layout(showlegend=False)
    st.plotly_chart(fig_box, use_container_width=True)

# --- Estat√≠sticas descritivas ---
st.markdown("### üìä Estat√≠sticas Descritivas por Tipo de Acesso Inicial")

tabela_resumo = (
    df.groupby("ACESSO_VASCULAR_INICIAL")["TEMPO_ESPERA_DIAS"]
    .agg(
        N_Pacientes="count",
        Media="mean",
        Mediana="median",
        Desvio_Padrao="std",
        P25=lambda x: x.quantile(0.25),
        P75=lambda x: x.quantile(0.75),
        Prop_Acima_180=lambda x: (x > 180).mean() * 100
    )
    .round(1)
    .reset_index()
)

st.dataframe(tabela_resumo)

# --- Interpreta√ß√£o ---
st.markdown("### üß† Interpreta√ß√£o")

col1, col2 = st.columns(2)
with col1:
    st.success(
        "‚úÖ A an√°lise mostra que o tipo de acesso inicial **impacta significativamente** o tempo de espera para FAV.")
    st.markdown("""
    - Pacientes que iniciam com **Cateter Duplo L√∫men** apresentam, em m√©dia, **maior tempo de espera**.
    - A **propor√ß√£o de casos com mais de 180 dias de espera** tamb√©m tende a ser maior nesse grupo.
    """)

with col2:
    st.info("""
    Este achado refor√ßa a necessidade de **planejamento pr√©vio do acesso vascular**, 
    especialmente na aten√ß√£o b√°sica e acompanhamento ambulatorial de pacientes com doen√ßa renal cr√¥nica em est√°gio avan√ßado.
    """)

# --- Dados brutos no final ---
with st.expander("üîç Ver primeiros registros do conjunto de dados"):
    st.dataframe(df[['ACESSO_VASCULAR_INICIAL', 'TEMPO_ESPERA_DIAS']].head(20))
